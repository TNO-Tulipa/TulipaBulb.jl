var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"TODO","category":"page"},{"location":"how-to-use/#how-to-use","page":"How to Use","title":"How to Use","text":"","category":"section"},{"location":"how-to-use/#install","page":"How to Use","title":"Install","text":"","category":"section"},{"location":"how-to-use/","page":"How to Use","title":"How to Use","text":"Clone the repository from TulipaEnergyModel.jl into your local machine\nOpen the project in your favorite IDE (e.g., Visual Studio Code)\nStart a Julia REPL and then:\n]: Enter package mode\nactivate . : Activate here (root of project)\ninstantiate : Instantiate any packages you need according to the Project.toml\ntest: Run tests - they should pass before you create a pull request","category":"page"},{"location":"mathematical-formulation/#math-formulation","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"This section shows the mathematical formulation of the model.","category":"page"},{"location":"mathematical-formulation/#math-sets","page":"Mathematical Formulation","title":"Sets","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Description Elements\nmathcalA Energy assets a in mathcalA\nmathcalA_c Consumer energy assets mathcalA_c subseteq mathcalA\nmathcalA_p Producer energy assets mathcalA_p subseteq mathcalA\nmathcalA_i Energy assets with investment method mathcalA_i subseteq mathcalA\nmathcalA_b Energy assets with balance method mathcalA_b subseteq mathcalA\nmathcalRP Representative periods rp in mathcalRP\nmathcalK Time steps within the rp k in mathcalK\nmathcalF Flow connections between two assets f in mathcalF\nmathcalF_rec(a) Set of flows with receiving asset a mathcalF_rec(a) subseteq mathcalF\nmathcalF_snd(a) Set of flows with sending asset a mathcalF_snd(a) subseteq mathcalF","category":"page"},{"location":"mathematical-formulation/#math-parameters","page":"Mathematical Formulation","title":"Parameters","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Description Units\np^investment_cost_a Investment cost  of asset units [kEUR/MW/year]\np^variable_cost_a Variable cost of asset units [kEUR/MWh]\np^unit_capacity_a Capacity of asset units [MW]\np^rp_weight_rp Representative period weight [h]\np^profile_arp k Asset production/consumption profile [p.u.]\np^peak_demand_a Peak demand [MW]\np^init_capacity_a initial capacity of asset units [MW]","category":"page"},{"location":"mathematical-formulation/#math-variables","page":"Mathematical Formulation","title":"Variables","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Description Units\nv^flow_frpk in mathbbR Flow between two assets [MW]\nv^investment_a in mathbbZ^+ Number of installed asset units [units]","category":"page"},{"location":"mathematical-formulation/#math-objective-function","page":"Mathematical Formulation","title":"Objective Function","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Objective function:","category":"page"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"textminimize quad investment_cost + variable_cost","category":"page"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Where:","category":"page"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\ninvestment_cost = sum_a in mathcalAi p^investment_cost_a cdot p^unit_capacity_a cdot v^investment_a \nvariable_cost = sum_a in mathcalAp sum_f in mathcalF_snd(a) sum_rp in mathcalRP sum_k in mathcalK p^rp_weight_rp cdot p^variable_cost_a cdot v^flow_frpk\nendaligned","category":"page"},{"location":"mathematical-formulation/#math-constraints","page":"Mathematical Formulation","title":"Constraints","text":"","category":"section"},{"location":"mathematical-formulation/#Balance-Constraint","page":"Mathematical Formulation","title":"Balance Constraint","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF_rec(a) v^flow_frpk - sum_f in mathcalF_snd(a) v^flow_frpk = p^profile_arpk cdot p^peak_demand_a quad forall a in mathcalA_b forall rp in mathcalRPforall k in mathcalK\nendaligned","category":"page"},{"location":"mathematical-formulation/#Upper-Bound-Constraint-for-Flows","page":"Mathematical Formulation","title":"Upper Bound Constraint for Flows","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nv^flow_frpk leq p^profile_arpk cdot left(p^init_capacity_a + p^unit_capacity_a cdot v^investment_a right)  quad forall a in mathcalAp forall f in mathcalF_snd(a) forall rp in mathcalRPforall k in mathcalK\nendaligned","category":"page"},{"location":"mathematical-formulation/#Lower-Bound-Constraint-for-Flows","page":"Mathematical Formulation","title":"Lower Bound Constraint for Flows","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"v^flow_frpk geq 0 quad forall f in mathcalF forall rp in mathcalRP forall k in mathcalk","category":"page"},{"location":"reference/#[Reference]","page":"Reference","title":"[Reference]","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​ TODO","category":"page"},{"location":"reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"​## Index ​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [TulipaEnergyModel]","category":"page"},{"location":"reference/#TulipaEnergyModel.create_parameters_and_sets_from_file-Tuple{AbstractString}","page":"Reference","title":"TulipaEnergyModel.create_parameters_and_sets_from_file","text":"parameters, sets = create_parameters_and_sets_from_file(input_folder)\n\nReturns two NamedTuples with all parameters and sets read and created from the input files in the input_folder.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TulipaEnergyModel.optimise_investments-Tuple{Any, Any}","page":"Reference","title":"TulipaEnergyModel.optimise_investments","text":"optimise_investments\n\nThis is a doc for optimise_investments. It should probably be improved.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TulipaEnergyModel.save_solution_to_file-NTuple{4, Any}","page":"Reference","title":"TulipaEnergyModel.save_solution_to_file","text":"save_solution_to_file(output_file, v_investment, p_unit_capacity)\n\nSaves the solution variable vinvestment to a file \"investments.csv\" inside `outputfile. The format of each row isa,v,p*v, whereais the asset indexingvinvestment,vis correspondingvinvestmentvalue, andpis the correspondingpunitcapacity` value.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = TulipaEnergyModel","category":"page"},{"location":"#home","page":"Home","title":"TulipaEnergyModel.jl documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"TulipaEnergyModel.jl is an optimization model for the electricity market and its coupling with other energy sectors (e.g., hydrogen, heat, natural gas, etc.). The optimization model determines the optimal investment and operation decisions for different types of assets (e.g., producers, consumers, conversion, storage, and transport). TulipaEnergyModel.jl is developed in Julia and depends on the JuMP.jl package.","category":"page"},{"location":"#license","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This content is released under the Apache License 2.0 License.","category":"page"},{"location":"#bugs-and-discussions","page":"Home","title":"Bug reports and discussions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you think you found a bug, feel free to open an issue. Focused suggestions and requests can also be opened as issues. Before opening a pull request, please start an issue or a discussion on the topic.","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you want to ask a question unsuitable for a bug report, start a discussion here. This forum is for general discussion about the repository TulipaEnergyModel.","category":"page"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"tutorial/#tutorial","page":"Tutorial","title":"Tutorial","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"TODO","category":"page"},{"location":"tutorial/#basic-example","page":"Tutorial","title":"Basic example","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"TODO","category":"page"}]
}
