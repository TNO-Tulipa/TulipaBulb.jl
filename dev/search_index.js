var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"TODO","category":"page"},{"location":"how-to-use/#how-to-use","page":"How to Use","title":"How to Use","text":"","category":"section"},{"location":"how-to-use/#install","page":"How to Use","title":"Install","text":"","category":"section"},{"location":"how-to-use/","page":"How to Use","title":"How to Use","text":"Clone the repository from TulipaEnergyModel.jl into your local machine\nOpen the project in your favorite IDE (e.g., Visual Studio Code)\nStart a Julia REPL and then:\n]: Enter package mode\nactivate . : Activate here (root of project)\ninstantiate : Instantiate any packages you need according to the Project.toml\ntest: (Optional) Try running the tests to see if you're set up correctly - they should pass","category":"page"},{"location":"mathematical-formulation/#math-formulation","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"This section shows the mathematical formulation of the model.\nThe full mathematical formulation is also freely available in the preprint.","category":"page"},{"location":"mathematical-formulation/#math-sets","page":"Mathematical Formulation","title":"Sets","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Description Elements\nmathcalA Energy assets a in mathcalA\nmathcalA_c Consumer energy assets mathcalA_c        subseteq mathcalA\nmathcalA_p Producer energy assets mathcalA_p        subseteq mathcalA\nmathcalA_s Storage energy assets mathcalA_s        subseteq mathcalA\nmathcalA_h Hub energy assets (e.g., transshipment) mathcalA_h        subseteq mathcalA\nmathcalA_cv Conversion energy assets mathcalA_cv     subseteq mathcalA\nmathcalA_i Energy assets with investment method mathcalA_i        subseteq mathcalA\nmathcalF Flow connections between two assets f in mathcalF\nmathcalF_t Transport flow between two assets mathcalF_t        subseteq mathcalF\nmathcalF_i Transport flow with investment method mathcalF_i        subseteq mathcalF_t\nmathcalF_in(a) Set of flows going into asset a mathcalF_in(a)  subseteq mathcalF\nmathcalF_out(a) Set of flows going out of asset a mathcalF_out(a) subseteq mathcalF\nmathcalRP Representative periods rp in mathcalRP\nmathcalK Time steps within the rp k  in mathcalK","category":"page"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"NOTE: Asset types are mutually exclusive.","category":"page"},{"location":"mathematical-formulation/#math-parameters","page":"Mathematical Formulation","title":"Parameters","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Domain Description Units\np^investment_cost_a mathcalA_i Investment cost  of asset units [kEUR/MW/year]\np^unit_capacity_a mathcalA Capacity of asset units [MW]\np^peak_demand_a mathcalA_c Peak demand [MW]\np^init_capacity_a mathcalA Initial capacity of asset units [MW]\np^investment_cost_f mathcalF_i Investment cost  of flow connections [kEUR/MW/year]\np^variable_cost_f mathcalF Variable cost of flow connections [kEUR/MWh]\np^unit_capacity_f mathcalF Capacity of flow connections [MW]\np^init_capacity_f mathcalF Initial capacity of flow connections [MW]\np^export_capacity_f mathcalF_t Export capacity of flow connections [MW]\np^import_capacity_f mathcalF_t Import capacity of flow connections [MW]\np^rp_weight_rp mathcalRP Representative period weight [h]\np^profile_arpk mathcalARPK Asset profile [p.u.]\np^profile_frpk mathcalFRPK Flow connections profile [p.u.]\np^ene_to_pow_ratio_a mathcalA_s Energy to power ratio [h]\np^init_storage_level_a mathcalA_s Initial storage level [MWh]\np^inflow_a mathcalA_s Energy storage inflows [MWh]\np^eff_f mathcalF Flow efficiency [p.u.]","category":"page"},{"location":"mathematical-formulation/#math-variables","page":"Mathematical Formulation","title":"Variables","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Domain Description Units\nv^flow_frpk  in mathbbR mathcalFRPK Flow between two assets [MW]\nv^investment_a in mathbbZ^+ mathcalA_i Number of installed asset units [units]\nv^investment_f in mathbbZ^+ mathcalF_i Number of installed units between two assets [units]\ns^level_arpk in mathbbR mathcalA_sRPK Storage level [MWh]","category":"page"},{"location":"mathematical-formulation/#math-objective-function","page":"Mathematical Formulation","title":"Objective Function","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Objective function:","category":"page"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\ntextminimize quad  assets_investment_cost + flows_investment_cost \n                         + flows_variable_cost\nendaligned","category":"page"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Where:","category":"page"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nassets_investment_cost = sum_a in mathcalAi p^investment_cost_a cdot p^unit_capacity_a cdot v^investment_a \nflows_investment_cost = sum_f in mathcalFi p^investment_cost_f cdot p^unit_capacity_f cdot v^investment_f \nflows_variable_cost = sum_f in mathcalF sum_rp in mathcalRP sum_k in mathcalK p^rp_weight_rp cdot p^variable_cost_f cdot v^flow_frpk\nendaligned","category":"page"},{"location":"mathematical-formulation/#math-constraints","page":"Mathematical Formulation","title":"Constraints","text":"","category":"section"},{"location":"mathematical-formulation/#Balancing-Contraints-for-Asset-Type","page":"Mathematical Formulation","title":"Balancing Contraints for Asset Type","text":"","category":"section"},{"location":"mathematical-formulation/#Constraints-for-Consumers-Energy-Assets-\\mathcal{A}_c","page":"Mathematical Formulation","title":"Constraints for Consumers Energy Assets mathcalA_c","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF_in(a) v^flow_frpk - sum_f in mathcalF_out(a) v^flow_frpk leftbeginarrayl =  geqslant  leqslant endarrayright p^profile_arpk cdot p^peak_demand_a quad\n  forall a in mathcalA_c forall rp in mathcalRPforall k in mathcalK\nendaligned","category":"page"},{"location":"mathematical-formulation/#Constraints-for-Storage-Energy-Assets-\\mathcal{A}_s","page":"Mathematical Formulation","title":"Constraints for Storage Energy Assets mathcalA_s","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\ns_arpk^level = s_arpk-1^level + p_arpk^inflow + cdot sum_f in mathcalF_in(a) p^eff_f cdot v^flow_frpk - sum_f in mathcalF_out(a) frac1p^eff_f cdot v^flow_frpk quad\n  forall a in mathcalA_s forall rp in mathcalRPforall k in mathcalK\nendaligned","category":"page"},{"location":"mathematical-formulation/#Constraints-for-Hub-Energy-Assets-\\mathcal{A}_h","page":"Mathematical Formulation","title":"Constraints for Hub Energy Assets mathcalA_h","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF_in(a) v^flow_frpk = sum_f in mathcalF_out(a) v^flow_frpk quad\n  forall a in mathcalA_h forall rp in mathcalRPforall k in mathcalK\nendaligned","category":"page"},{"location":"mathematical-formulation/#Constraints-for-Conversion-Energy-Assets-\\mathcal{A}_{cv}","page":"Mathematical Formulation","title":"Constraints for Conversion Energy Assets mathcalA_cv","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF_in(a) p^eff_f cdot v^flow_frpk = sum_f in mathcalF_out(a) fracv^flow_frpkp^eff_f  quad\n  forall a in mathcalA_cv forall rp in mathcalRPforall k in mathcalK\nendaligned","category":"page"},{"location":"mathematical-formulation/#Constraints-that-Define-Bounds-of-Flows-Related-to-Energy-Assets-\\mathcal{A}","page":"Mathematical Formulation","title":"Constraints that Define Bounds of Flows Related to Energy Assets mathcalA","text":"","category":"section"},{"location":"mathematical-formulation/#Contraint-for-the-Overall-Output-Flows-from-an-Asset","page":"Mathematical Formulation","title":"Contraint for the Overall Output Flows from an Asset","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF_out(a) v^flow_frpk leq p^profile_arpk cdot left(p^init_capacity_a + p^unit_capacity_a cdot v^investment_a right)  quad\n  forall a in mathcalA_cv cup mathcalA_s cup mathcalA_p forall rp in mathcalRPforall k in mathcalK\nendaligned","category":"page"},{"location":"mathematical-formulation/#Contraint-for-the-Overall-Input-Flows-from-an-Asset","page":"Mathematical Formulation","title":"Contraint for the Overall Input Flows from an Asset","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF_in(a) v^flow_frpk leq p^profile_arpk cdot left(p^init_capacity_a + p^unit_capacity_a cdot v^investment_a right)  quad\n  forall a in mathcalA_s forall rp in mathcalRPforall k in mathcalK\nendaligned","category":"page"},{"location":"mathematical-formulation/#Upper-Bound-Constraint-for-Associated-with-Asset","page":"Mathematical Formulation","title":"Upper Bound Constraint for Associated with Asset","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nv^flow_frpk leq p^profile_arpk cdot left(p^init_capacity_a + p^unit_capacity_a cdot v^investment_a right)  quad   forall a notin mathcalA_h cup mathcalA_c\nforall f in mathcalF_out(a)  notin mathcalF_t forall rp in mathcalRPforall k in mathcalK\nendaligned","category":"page"},{"location":"mathematical-formulation/#Lower-Bound-Constraint-Flows-Associated-with-Asset","page":"Mathematical Formulation","title":"Lower Bound Constraint Flows Associated with Asset","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"v^flow_frpk geq 0 quad forall f notin mathcalF_t forall rp in mathcalRP forall k in mathcalk","category":"page"},{"location":"mathematical-formulation/#Constraints-that-Define-Bounds-for-a-Transport-Flow-\\mathcal{F}_t","page":"Mathematical Formulation","title":"Constraints that Define Bounds for a Transport Flow mathcalF_t","text":"","category":"section"},{"location":"mathematical-formulation/#Upper-Bound-Constraint-for-Transport-Flows","page":"Mathematical Formulation","title":"Upper Bound Constraint for Transport Flows","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nv^flow_frpk leq p^profile_frpk cdot left(p^init_capacity_f + p^export_capacity_f cdot v^investment_f right)  quad\n  forall f in mathcalF_t forall rp in mathcalRPforall k in mathcalK\nendaligned","category":"page"},{"location":"mathematical-formulation/#Lower-Bound-Constraint-for-Transport-Flows","page":"Mathematical Formulation","title":"Lower Bound Constraint for Transport Flows","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nv^flow_frpk geq p^profile_frpk cdot left(p^init_capacity_f + p^import_capacity_f cdot v^investment_f right)  quad\n  forall f in mathcalF_t forall rp in mathcalRPforall k in mathcalK\nendaligned","category":"page"},{"location":"mathematical-formulation/#Extra-Constraints-for-Energy-Storage-Assets-\\mathcal{A}_s","page":"Mathematical Formulation","title":"Extra Constraints for Energy Storage Assets mathcalA_s","text":"","category":"section"},{"location":"mathematical-formulation/#Upper-and-Lower-Bound-Constraints-for-Storage-Level","page":"Mathematical Formulation","title":"Upper and Lower Bound Constraints for Storage Level","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"0 leq s_arpk^level leq p^init_storage_capacity_a + p^ene_to_pow_ratio_a cdot p^unit_capacity_a cdot v^investment_a quad\n  forall a in mathcalA_s forall rp in mathcalRPforall k in mathcalK","category":"page"},{"location":"mathematical-formulation/#Cycling-Constraints-for-Storage-Level","page":"Mathematical Formulation","title":"Cycling Constraints for Storage Level","text":"","category":"section"},{"location":"mathematical-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"s_arpk=K^level geq p^init_storage_level_a quad\n  forall a in mathcalA_s forall rp in mathcalRP","category":"page"},{"location":"reference/#[Reference]","page":"Reference","title":"[Reference]","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​ TODO","category":"page"},{"location":"reference/#Contents","page":"Reference","title":"Contents","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"​## Index ​","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Pages = [\"reference.md\"]","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [TulipaEnergyModel]","category":"page"},{"location":"reference/#TulipaEnergyModel.AssetData","page":"Reference","title":"TulipaEnergyModel.AssetData","text":"Schema for the assets-data.csv file.\n\n\n\n\n\n","category":"type"},{"location":"reference/#TulipaEnergyModel.AssetPartitionData","page":"Reference","title":"TulipaEnergyModel.AssetPartitionData","text":"Schema for the assets-partitions.csv file.\n\n\n\n\n\n","category":"type"},{"location":"reference/#TulipaEnergyModel.AssetProfiles","page":"Reference","title":"TulipaEnergyModel.AssetProfiles","text":"Schema for the assets-profiles.csv file.\n\n\n\n\n\n","category":"type"},{"location":"reference/#TulipaEnergyModel.EnergyProblem","page":"Reference","title":"TulipaEnergyModel.EnergyProblem","text":"Structure to hold all parts of an energy problem.\n\n\n\n\n\n","category":"type"},{"location":"reference/#TulipaEnergyModel.FlowData","page":"Reference","title":"TulipaEnergyModel.FlowData","text":"Schema for the flows-data.csv file.\n\n\n\n\n\n","category":"type"},{"location":"reference/#TulipaEnergyModel.FlowPartitionData","page":"Reference","title":"TulipaEnergyModel.FlowPartitionData","text":"Schema for the flows-partitions.csv file.\n\n\n\n\n\n","category":"type"},{"location":"reference/#TulipaEnergyModel.FlowProfiles","page":"Reference","title":"TulipaEnergyModel.FlowProfiles","text":"Schema for the flows-profiles file.\n\n\n\n\n\n","category":"type"},{"location":"reference/#TulipaEnergyModel.GraphAssetData","page":"Reference","title":"TulipaEnergyModel.GraphAssetData","text":"Structure to hold the asset data in the graph.\n\n\n\n\n\n","category":"type"},{"location":"reference/#TulipaEnergyModel.GraphFlowData","page":"Reference","title":"TulipaEnergyModel.GraphFlowData","text":"Structure to hold the flow data in the graph.\n\n\n\n\n\n","category":"type"},{"location":"reference/#TulipaEnergyModel.RepPeriodData","page":"Reference","title":"TulipaEnergyModel.RepPeriodData","text":"Schema for the rep-period-data.csv file.\n\n\n\n\n\n","category":"type"},{"location":"reference/#TulipaEnergyModel.RepresentativePeriod","page":"Reference","title":"TulipaEnergyModel.RepresentativePeriod","text":"Structure to hold the data of one representative period.\n\n\n\n\n\n","category":"type"},{"location":"reference/#TulipaEnergyModel._parse_rp_partition","page":"Reference","title":"TulipaEnergyModel._parse_rp_partition","text":"_parse_rp_partition(Val(specification), time_step_string, rp_time_steps)\n\nParses the timestepstring according to the specification. The representative period time steps (rp_time_steps) might not be used in the computation, but it will be used for validation.\n\nThe specification defines what is expected from the time_step_string:\n\n:uniform: The time_step_string should be a single number indicating the duration of each block. Examples: \"3\", \"4\", \"1\".\n:explicit: The time_step_string should be a semicolon-separated list of integers. Each integer is a duration of a block. Examples: \"3;3;3;3\", \"4;4;4\", \"1;1;1;1;1;1;1;1;1;1;1;1\", and \"3;3;4;2\".\n:math: The time_step_string should be an expression of the form NxD+NxD…, where D is the duration of the block and N is the number of blocks. Examples: \"4x3\", \"3x4\", \"12x1\", and \"2x3+1x4+1x2\".\n\nThe generated blocks will be ranges (a:b). The first block starts at 1, and the last block ends at length(rp_time_steps).\n\nThe following table summarizes the formats for a rp_time_steps = 1:12:\n\nOutput :uniform :explicit :math\n1:3, 4:6, 7:9, 10:12 3 3;3;3;3 4x3\n1:4, 5:8, 9:12 4 4;4;4 3x4\n1:1, 2:2, …, 12:12 1 1;1;1;1;1;1;1;1;1;1;1;1 12x1\n1:3, 4:6, 7:10, 11:12 NA 3;3;4;2 2x3+1x4+1x2\n\nExamples\n\nusing TulipaEnergyModel\nTulipaEnergyModel._parse_rp_partition(Val(:uniform), \"3\", 1:12)\n\n# output\n\n4-element Vector{UnitRange{Int64}}:\n 1:3\n 4:6\n 7:9\n 10:12\n\nusing TulipaEnergyModel\nTulipaEnergyModel._parse_rp_partition(Val(:explicit), \"4;4;4\", 1:12)\n\n# output\n\n3-element Vector{UnitRange{Int64}}:\n 1:4\n 5:8\n 9:12\n\nusing TulipaEnergyModel\nTulipaEnergyModel._parse_rp_partition(Val(:math), \"2x3+1x4+1x2\", 1:12)\n\n# output\n\n4-element Vector{UnitRange{Int64}}:\n 1:3\n 4:6\n 7:10\n 11:12\n\n\n\n\n\n","category":"function"},{"location":"reference/#TulipaEnergyModel.compute_assets_partitions!-NTuple{4, Any}","page":"Reference","title":"TulipaEnergyModel.compute_assets_partitions!","text":"compute_assets_partitions!(partitions, df, a, representative_periods)\n\nParses the time blocks in the DataFrame df for the asset a and every representative period in the time_steps_per_rp dictionary, modifying the input partitions.\n\npartitions must be a dictionary indexed by the representative periods, possibly empty.\n\ntime_steps_per_rp must be a dictionary indexed by rp and its values are the time steps of that rp.\n\nTo obtain the partitions, the columns specification and partition from df are passed to the function _parse_rp_partition.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TulipaEnergyModel.compute_constraints_partitions-Tuple{Any, Any}","page":"Reference","title":"TulipaEnergyModel.compute_constraints_partitions","text":"cons_partitions = compute_constraints_partitions(graph, representative_periods)\n\nComputes the constraints partitions using the assets and flows partitions stored in the graph, and the representative periods.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TulipaEnergyModel.compute_flows_partitions!-NTuple{5, Any}","page":"Reference","title":"TulipaEnergyModel.compute_flows_partitions!","text":"compute_flows_partitions!(partitions, df, u, v, representative_periods)\n\nParses the time blocks in the DataFrame df for the flow (u, v) and every representative period in the time_steps_per_rp dictionary, modifying the input partitions.\n\npartitions must be a dictionary indexed by the representative periods, possibly empty.\n\ntime_steps_per_rp must be a dictionary indexed by rp and its values are the time steps of that rp.\n\nTo obtain the partitions, the columns specification and partition from df are passed to the function _parse_rp_partition.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TulipaEnergyModel.compute_rp_partition-Tuple{AbstractVector{<:AbstractVector{<:UnitRange{<:Integer}}}}","page":"Reference","title":"TulipaEnergyModel.compute_rp_partition","text":"rp_partition = compute_rp_partition(partitions; strategy = :greedy)\n\nGiven the time steps of various flows/assets in the partitions input, compute the representative period partitions.\n\nEach element of partitions is a partition with the following assumptions:\n\nAn element is of the form V = [r₁, r₂, …, rₘ], where each rᵢ is a range a:b.\nr₁ starts at 1.\nrᵢ₊₁ starts at the end of rᵢ plus 1.\nrₘ ends at some value N, that is the same for all elements of partitions.\n\nNotice that this implies that they form a disjunct partition of 1:N.\n\nThe output will also be a partition with the conditions above.\n\nStrategies\n\n:greedy\n\nIf strategy = :greedy (default), then the output is constructed greedily, i.e., it selects the next largest breakpoint following the algorithm below:\n\nInput: Vᴵ₁, …, Vᴵₚ, a list of time blocks. Each element of Vᴵⱼ is a range r = r.start:r.end. Output: V.\nCompute the end of the representative period N (all Vᴵⱼ should have the same end)\nStart with an empty V = []\nDefine the beginning of the range s = 1\nDefine an array with all the next breakpoints B such that Bⱼ is the first r.end such that r.end ≥ s for each r ∈ Vᴵⱼ.\nThe end of the range will be the e = max Bⱼ.\nDefine r = s:e and add r to the end of V.\nIf e = N, then END\nOtherwise, define s = e + 1 and go to step 4.\n\nExamples\n\npartition1 = [1:4, 5:8, 9:12]\npartition2 = [1:3, 4:6, 7:9, 10:12]\ncompute_rp_partition([partition1, partition2])\n\n# output\n\n3-element Vector{UnitRange{Int64}}:\n 1:4\n 5:8\n 9:12\n\npartition1 = [1:1, 2:3, 4:6, 7:10, 11:12]\npartition2 = [1:2, 3:4, 5:5, 6:7, 8:9, 10:12]\ncompute_rp_partition([partition1, partition2])\n\n# output\n\n5-element Vector{UnitRange{Int64}}:\n 1:2\n 3:4\n 5:6\n 7:10\n 11:12\n\n:all\n\nIf strategy = :all, then the output selects includes all the breakpoints from the input. Another way of describing it, is to select the minimum end-point instead of the maximum end-point in the :greedy strategy.\n\nExamples\n\npartition1 = [1:4, 5:8, 9:12]\npartition2 = [1:3, 4:6, 7:9, 10:12]\ncompute_rp_partition([partition1, partition2]; strategy = :all)\n\n# output\n\n6-element Vector{UnitRange{Int64}}:\n 1:3\n 4:4\n 5:6\n 7:8\n 9:9\n 10:12\n\npartition1 = [1:1, 2:3, 4:6, 7:10, 11:12]\npartition2 = [1:2, 3:4, 5:5, 6:7, 8:9, 10:12]\ncompute_rp_partition([partition1, partition2]; strategy = :all)\n\n# output\n\n10-element Vector{UnitRange{Int64}}:\n 1:1\n 2:2\n 3:3\n 4:4\n 5:5\n 6:6\n 7:7\n 8:9\n 10:10\n 11:12\n\n\n\n\n\n","category":"method"},{"location":"reference/#TulipaEnergyModel.create_energy_problem_from_csv_folder-Tuple{AbstractString}","page":"Reference","title":"TulipaEnergyModel.create_energy_problem_from_csv_folder","text":"energy_problem = create_energy_problem_from_csv_folder(input_folder)\n\nReturns the TulipaEnergyModel.EnergyProblem reading all data from CSV files in the input_folder.\n\nThe following files are expected to exist in the input folder:\n\nassets-data.csv: Following the TulipaEnergyModel.AssetData specification.\nassets-profiles.csv: Following the TulipaEnergyModel.AssetProfiles specification.\nassets-paritions.csv: Following the TulipaEnergyModel.AssetPartitionData specification.\nflows-data.csv: Following the TulipaEnergyModel.FlowData specification.\nflows-profiles.csv: Following the TulipaEnergyModel.FlowProfiles specification.\nflows-paritions.csv: Following the TulipaEnergyModel.FlowPartitionData specification.\nrep-periods-data.csv: Following the TulipaEnergyModel.RepPeriodData specification.\n\nThe energy_problem contains:\n\ngraph: a MetaGraph with the following information:\nlabels(graph): All assets.\nedge_labels(graph): All flows, in pair format (u, v), where u and v are assets.\ngraph[a]: A TulipaEnergyModel.GraphAssetData structure for asset a.\ngraph[u, v]: A TulipaEnergyModel.GraphFlowData structure for flow (u, v).\nrepresentative_periods: An array of TulipaEnergyModel.RepresentativePeriod ordered by their IDs.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TulipaEnergyModel.create_graph-Tuple{Any, Any}","page":"Reference","title":"TulipaEnergyModel.create_graph","text":"graph = create_graph(assets_path, flows_path)\n\nRead the assets and flows data CSVs and create a graph object.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TulipaEnergyModel.create_model!-Tuple{Any}","page":"Reference","title":"TulipaEnergyModel.create_model!","text":"create_model!(energy_problem; verbose = false)\n\nCreate the internal model of an TulipaEnergyModel.EnergyProblem.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TulipaEnergyModel.create_model-Tuple{Any, Any, Any}","page":"Reference","title":"TulipaEnergyModel.create_model","text":"model = create_model(graph, representative_periods)\n\nCreate the energy model given the graph and representative_periods.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TulipaEnergyModel.read_csv_with_schema-Tuple{Any, Any}","page":"Reference","title":"TulipaEnergyModel.read_csv_with_schema","text":"read_csv_with_schema(file_path, schema)\n\nReads the csv with file_name at location path validating the data using the schema. It is assumes that the file's header is at the second row. The first row of the file contains some metadata information that is not used.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TulipaEnergyModel.resolution_matrix-Tuple{AbstractVector{<:UnitRange{<:Integer}}, AbstractVector{<:UnitRange{<:Integer}}}","page":"Reference","title":"TulipaEnergyModel.resolution_matrix","text":"M = resolution_matrix(rp_partition, time_blocks; rp_resolution = 1.0)\n\nComputes the resolution balance matrix using the array of rp_partition and the array of time_blocks. The time_blocks will normally be from an asset or flow, but there is nothing constraining it to that. The elements in these arrays must be ranges.\n\nThe resulting matrix will be multiplied by rp_resolution.\n\nExamples\n\nThe following two examples are for two flows/assets with resolutions of 3h and 4h, so that the representative period has 4h periods.\n\nrp_partition = [1:4, 5:8, 9:12]\ntime_blocks = [1:4, 5:8, 9:12]\nresolution_matrix(rp_partition, time_blocks)\n\n# output\n\n3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 3 stored entries:\n 1.0   ⋅    ⋅\n  ⋅   1.0   ⋅\n  ⋅    ⋅   1.0\n\nrp_partition = [1:4, 5:8, 9:12]\ntime_blocks = [1:3, 4:6, 7:9, 10:12]\nresolution_matrix(rp_partition, time_blocks; rp_resolution = 1.5)\n\n# output\n\n3×4 SparseArrays.SparseMatrixCSC{Float64, Int64} with 6 stored entries:\n 1.5  0.5   ⋅    ⋅\n  ⋅   1.0  1.0   ⋅\n  ⋅    ⋅   0.5  1.5\n\n\n\n\n\n","category":"method"},{"location":"reference/#TulipaEnergyModel.save_solution_to_file-Tuple{Any, Any}","page":"Reference","title":"TulipaEnergyModel.save_solution_to_file","text":"save_solution_to_file(output_file, graph)\n\nSaves the solution in CSV files inside output_folder.\n\nThe following files are created:\n\ninvestment.csv: The format of each row is a,v,p*v, where a is the asset name, v is the corresponding asset investment value, and p is the corresponding capacity value. Only investable assets are included.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TulipaEnergyModel.save_solution_to_file-Tuple{Any, TulipaEnergyModel.EnergyProblem}","page":"Reference","title":"TulipaEnergyModel.save_solution_to_file","text":"save_solution_to_file(output_folder, energy_problem)\n\nSaves the solution from energy_problem in CSV files inside output_file.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TulipaEnergyModel.solve_model!-Tuple{TulipaEnergyModel.EnergyProblem}","page":"Reference","title":"TulipaEnergyModel.solve_model!","text":"solve_model!(energy_problem)\n\nSolve the internal model of an energy_problem.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TulipaEnergyModel.solve_model-Tuple{JuMP.Model}","page":"Reference","title":"TulipaEnergyModel.solve_model","text":"solution = solve_model(model)\n\nSolve the JuMP model and return the solution.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = TulipaEnergyModel","category":"page"},{"location":"#home","page":"Home","title":"TulipaEnergyModel.jl documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"TulipaEnergyModel.jl is an optimization model for the electricity market and its coupling with other energy sectors (e.g., hydrogen, heat, natural gas, etc.). The optimization model determines the optimal investment and operation decisions for different types of assets (e.g., producers, consumers, conversion, storage, and transport). TulipaEnergyModel.jl is developed in Julia and depends on the JuMP.jl package.","category":"page"},{"location":"#license","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This content is released under the Apache License 2.0 License.","category":"page"},{"location":"#bugs-and-discussions","page":"Home","title":"Bug reports and discussions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you think you found a bug, feel free to open an issue. Focused suggestions and requests can also be opened as issues. Before opening a pull request, please start an issue or a discussion on the topic.","category":"page"},{"location":"","page":"Home","title":"Home","text":"If you want to ask a question unsuitable for a bug report, start a discussion here. This forum is for general discussion about the repository TulipaEnergyModel.","category":"page"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"tutorial/#tutorial","page":"Tutorial","title":"Tutorial","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"TODO","category":"page"},{"location":"tutorial/#basic-example","page":"Tutorial","title":"Basic example","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"TODO","category":"page"}]
}
